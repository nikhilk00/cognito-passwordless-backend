{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww23040\viewh15600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 // verifyAuthChallengeResponse.js\
// Converts the TypeScript verifyAuthChallengeResponse handler to plain JavaScript.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 export const handler = async (event) => \{\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0   /*\
    event.request.privateChallengeParameters = \{ otp: '123456' \} // what we created earlier\
    event.request.challengeAnswer = '123456' // what user submitted through RespondToAuthChallenge\
  */\
  const expected = event.request.privateChallengeParameters && event.request.privateChallengeParameters.otp;\
  const provided = event.request.challengeAnswer;\
\
  event.response = event.response || \{\};\
  if (expected && provided && provided === expected) \{\
    event.response.answerCorrect = true;\
  \} else \{\
    event.response.answerCorrect = false;\
  \}\
  return event;\
\};\
}