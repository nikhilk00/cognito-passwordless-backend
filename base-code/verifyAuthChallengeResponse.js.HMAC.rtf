{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww23040\viewh15600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 // verifyAuthChallengeResponse.js\
const crypto = require('crypto');\
\
const HMAC_SECRET = process.env.HMAC_SECRET || "super-secret-key";\
\
exports.handler = async (event) => \{\
  const provided = event.request.challengeAnswer; // user\'92s input\
  const challengeMetadata = event.request.challengeMetadata || "";\
\
  let answerCorrect = false;\
\
  if (challengeMetadata.startsWith("HMAC:")) \{\
    const expectedHmac = challengeMetadata.split("HMAC:")[1];\
\
    const computedHmac = crypto\
      .createHmac('sha256', HMAC_SECRET)\
      .update(provided)\
      .digest('hex');\
\
    if (computedHmac === expectedHmac) \{\
      answerCorrect = true;\
    \}\
  \}\
\
  event.response = event.response || \{\};\
  event.response.answerCorrect = answerCorrect;\
\
  return event;\
\};\
}