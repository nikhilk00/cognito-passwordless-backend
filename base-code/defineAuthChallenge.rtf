{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww23040\viewh15600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf0 // defineAuthChallenge.ts\
export const handler = async (event: any) => \{\
  /*\
  event.request.session contains previous challenges and outcome\
  We set:\
    event.response.issueTokens = boolean (if true, Cognito will issue tokens)\
    event.response.failAuthentication = boolean\
    event.response.challengeName = 'CUSTOM_CHALLENGE' or undefined\
  */\
  const session = event.request.session || [];\
  const lastChallenge = session.length ? session[session.length - 1] : null;\
\
  // If previous challenge was answered successfully, issue tokens\
  if (lastChallenge && lastChallenge.challengeResult === true) \{\
    event.response.issueTokens = true;\
    event.response.failAuthentication = false;\
    event.response.challengeName = undefined;\
  \} else \{\
    // Otherwise, issue a custom challenge\
    event.response.issueTokens = false;\
    event.response.failAuthentication = false;\
    event.response.challengeName = 'CUSTOM_CHALLENGE';\
  \}\
\
  return event;\
\};\
}